void shEval(const float fX, const float fY, const float fZ, float * pOut) {
	float fC0,fS0,fC1,fS1,fPa,fPb,fPc;
#if MAX_SH_ORDER == 1
pOut[0] = 0.282094791774;
#endif // muls = 3
#if MAX_SH_ORDER == 2
pOut[0] = 0.282094791774;
pOut[2] =  0.488602511903f*fZ;
fC0 = fX;
fS0 = fY;
fPb =  -0.488602511903f;
pOut[3] = fPb*fC0;
pOut[1] = fPb*fS0;
#endif // muls = 3
#if MAX_SH_ORDER == 3
float fZ2 = fZ*fZ;
pOut[0] = 0.282094791774;
pOut[2] =  0.488602511903f*fZ;
pOut[6] = ( 0.946174695758f*fZ2)+ -0.315391565253f;
fC0 = fX;
fS0 = fY;
fPa =  -0.488602511903f;
pOut[3] = fPa*fC0;
pOut[1] = fPa*fS0;
fPb =  -1.09254843059f*fZ;
pOut[7] = fPb*fC0;
pOut[5] = fPb*fS0;
fC1 = (fX*fC0)-(fY*fS0);
fS1 = (fX*fS0)+(fY*fC0);
fPc =  0.546274215296f;
pOut[8] = fPc*fC1;
pOut[4] = fPc*fS1;
#endif // muls = 14
#if MAX_SH_ORDER == 4
float fZ2 = fZ*fZ;
pOut[0] = 0.282094791774;
pOut[2] =  0.488602511903f*fZ;
pOut[6] = ( 0.946174695758f*fZ2)+ -0.315391565253f;
pOut[12] = fZ*((fZ2* 1.86588166295f)+ -1.11952899777f);
fC0 = fX;
fS0 = fY;
fPa =  -0.488602511903f;
pOut[3] = fPa*fC0;
pOut[1] = fPa*fS0;
fPb =  -1.09254843059f*fZ;
pOut[7] = fPb*fC0;
pOut[5] = fPb*fS0;
fPc = ( -2.28522899732f*fZ2)+ 0.457045799464f;
pOut[13] = fPc*fC0;
pOut[11] = fPc*fS0;
fC1 = (fX*fC0)-(fY*fS0);
fS1 = (fX*fS0)+(fY*fC0);
fPa =  0.546274215296f;
pOut[8] = fPa*fC1;
pOut[4] = fPa*fS1;
fPb =  1.44530572132f*fZ;
pOut[14] = fPb*fC1;
pOut[10] = fPb*fS1;
fC0 = (fX*fC1)-(fY*fS1);
fS0 = (fX*fS1)+(fY*fC1);
fPc =  -0.590043589927f;
pOut[15] = fPc*fC0;
pOut[9] = fPc*fS0;
#endif // muls = 28
#if MAX_SH_ORDER == 5
float fZ2 = fZ*fZ;
pOut[0] = 0.282094791774;
pOut[2] =  0.488602511903f*fZ;
pOut[6] = ( 0.946174695758f*fZ2)+ -0.315391565253f;
pOut[12] = fZ*((fZ2* 1.86588166295f)+ -1.11952899777f);
pOut[20] = ((fZ* 1.9843134833f)*pOut[ 12])+( -1.00623058987f*pOut[ 6]);
fC0 = fX;
fS0 = fY;
fPa =  -0.488602511903f;
pOut[3] = fPa*fC0;
pOut[1] = fPa*fS0;
fPb =  -1.09254843059f*fZ;
pOut[7] = fPb*fC0;
pOut[5] = fPb*fS0;
fPc = ( -2.28522899732f*fZ2)+ 0.457045799464f;
pOut[13] = fPc*fC0;
pOut[11] = fPc*fS0;
fPa = fZ*((fZ2* -4.6833258049f)+ 2.00713963067f);
pOut[21] = fPa*fC0;
pOut[19] = fPa*fS0;
fC1 = (fX*fC0)-(fY*fS0);
fS1 = (fX*fS0)+(fY*fC0);
fPa =  0.546274215296f;
pOut[8] = fPa*fC1;
pOut[4] = fPa*fS1;
fPb =  1.44530572132f*fZ;
pOut[14] = fPb*fC1;
pOut[10] = fPb*fS1;
fPc = ( 3.31161143515f*fZ2)+ -0.473087347879f;
pOut[22] = fPc*fC1;
pOut[18] = fPc*fS1;
fC0 = (fX*fC1)-(fY*fS1);
fS0 = (fX*fS1)+(fY*fC1);
fPa =  -0.590043589927f;
pOut[15] = fPa*fC0;
pOut[9] = fPa*fS0;
fPb =  -1.77013076978f*fZ;
pOut[23] = fPb*fC0;
pOut[17] = fPb*fS0;
fC1 = (fX*fC0)-(fY*fS0);
fS1 = (fX*fS0)+(fY*fC0);
fPc =  0.625835735449f;
pOut[24] = fPc*fC1;
pOut[16] = fPc*fS1;
#endif // muls = 47
#if MAX_SH_ORDER == 6
float fZ2 = fZ*fZ;
pOut[0] = 0.282094791774;
pOut[2] =  0.488602511903f*fZ;
pOut[6] = ( 0.946174695758f*fZ2)+ -0.315391565253f;
pOut[12] = fZ*((fZ2* 1.86588166295f)+ -1.11952899777f);
pOut[20] = ((fZ* 1.9843134833f)*pOut[ 12])+( -1.00623058987f*pOut[ 6]);
pOut[30] = ((fZ* 1.98997487421f)*pOut[ 20])+( -1.00285307284f*pOut[ 12]);
fC0 = fX;
fS0 = fY;
fPa =  -0.488602511903f;
pOut[3] = fPa*fC0;
pOut[1] = fPa*fS0;
fPb =  -1.09254843059f*fZ;
pOut[7] = fPb*fC0;
pOut[5] = fPb*fS0;
fPc = ( -2.28522899732f*fZ2)+ 0.457045799464f;
pOut[13] = fPc*fC0;
pOut[11] = fPc*fS0;
fPa = fZ*((fZ2* -4.6833258049f)+ 2.00713963067f);
pOut[21] = fPa*fC0;
pOut[19] = fPa*fS0;
fPb = ((fZ* 2.03100960116f)*fPa)+( -0.991031208965f*fPc);
pOut[31] = fPb*fC0;
pOut[29] = fPb*fS0;
fC1 = (fX*fC0)-(fY*fS0);
fS1 = (fX*fS0)+(fY*fC0);
fPa =  0.546274215296f;
pOut[8] = fPa*fC1;
pOut[4] = fPa*fS1;
fPb =  1.44530572132f*fZ;
pOut[14] = fPb*fC1;
pOut[10] = fPb*fS1;
fPc = ( 3.31161143515f*fZ2)+ -0.473087347879f;
pOut[22] = fPc*fC1;
pOut[18] = fPc*fS1;
fPa = fZ*((fZ2* 7.19030517746f)+ -2.39676839249f);
pOut[32] = fPa*fC1;
pOut[28] = fPa*fS1;
fC0 = (fX*fC1)-(fY*fS1);
fS0 = (fX*fS1)+(fY*fC1);
fPa =  -0.590043589927f;
pOut[15] = fPa*fC0;
pOut[9] = fPa*fS0;
fPb =  -1.77013076978f*fZ;
pOut[23] = fPb*fC0;
pOut[17] = fPb*fS0;
fPc = ( -4.40314469492f*fZ2)+ 0.489238299435f;
pOut[33] = fPc*fC0;
pOut[27] = fPc*fS0;
fC1 = (fX*fC0)-(fY*fS0);
fS1 = (fX*fS0)+(fY*fC0);
fPa =  0.625835735449f;
pOut[24] = fPa*fC1;
pOut[16] = fPa*fS1;
fPb =  2.07566231488f*fZ;
pOut[34] = fPb*fC1;
pOut[26] = fPb*fS1;
fC0 = (fX*fC1)-(fY*fS1);
fS0 = (fX*fS1)+(fY*fC1);
fPc =  -0.65638205684f;
pOut[35] = fPc*fC0;
pOut[25] = fPc*fS0;
#endif // muls = 71
#if MAX_SH_ORDER == 7
float fZ2 = fZ*fZ;
pOut[0] = 0.282094791774;
pOut[2] =  0.488602511903f*fZ;
pOut[6] = ( 0.946174695758f*fZ2)+ -0.315391565253f;
pOut[12] = fZ*((fZ2* 1.86588166295f)+ -1.11952899777f);
pOut[20] = ((fZ* 1.9843134833f)*pOut[ 12])+( -1.00623058987f*pOut[ 6]);
pOut[30] = ((fZ* 1.98997487421f)*pOut[ 20])+( -1.00285307284f*pOut[ 12]);
pOut[42] = ((fZ* 1.99304345718f)*pOut[ 30])+( -1.00154202096f*pOut[ 20]);
fC0 = fX;
fS0 = fY;
fPa =  -0.488602511903f;
pOut[3] = fPa*fC0;
pOut[1] = fPa*fS0;
fPb =  -1.09254843059f*fZ;
pOut[7] = fPb*fC0;
pOut[5] = fPb*fS0;
fPc = ( -2.28522899732f*fZ2)+ 0.457045799464f;
pOut[13] = fPc*fC0;
pOut[11] = fPc*fS0;
fPa = fZ*((fZ2* -4.6833258049f)+ 2.00713963067f);
pOut[21] = fPa*fC0;
pOut[19] = fPa*fS0;
fPb = ((fZ* 2.03100960116f)*fPa)+( -0.991031208965f*fPc);
pOut[31] = fPb*fC0;
pOut[29] = fPb*fS0;
fPc = ((fZ* 2.02131498924f)*fPb)+( -0.995226703056f*fPa);
pOut[43] = fPc*fC0;
pOut[41] = fPc*fS0;
fC1 = (fX*fC0)-(fY*fS0);
fS1 = (fX*fS0)+(fY*fC0);
fPa =  0.546274215296f;
pOut[8] = fPa*fC1;
pOut[4] = fPa*fS1;
fPb =  1.44530572132f*fZ;
pOut[14] = fPb*fC1;
pOut[10] = fPb*fS1;
fPc = ( 3.31161143515f*fZ2)+ -0.473087347879f;
pOut[22] = fPc*fC1;
pOut[18] = fPc*fS1;
fPa = fZ*((fZ2* 7.19030517746f)+ -2.39676839249f);
pOut[32] = fPa*fC1;
pOut[28] = fPa*fS1;
fPb = ((fZ* 2.11394181566f)*fPa)+( -0.973610120462f*fPc);
pOut[44] = fPb*fC1;
pOut[40] = fPb*fS1;
fC0 = (fX*fC1)-(fY*fS1);
fS0 = (fX*fS1)+(fY*fC1);
fPa =  -0.590043589927f;
pOut[15] = fPa*fC0;
pOut[9] = fPa*fS0;
fPb =  -1.77013076978f*fZ;
pOut[23] = fPb*fC0;
pOut[17] = fPb*fS0;
fPc = ( -4.40314469492f*fZ2)+ 0.489238299435f;
pOut[33] = fPc*fC0;
pOut[27] = fPc*fS0;
fPa = fZ*((fZ2* -10.1332578547f)+ 2.76361577854f);
pOut[45] = fPa*fC0;
pOut[39] = fPa*fS0;
fC1 = (fX*fC0)-(fY*fS0);
fS1 = (fX*fS0)+(fY*fC0);
fPa =  0.625835735449f;
pOut[24] = fPa*fC1;
pOut[16] = fPa*fS1;
fPb =  2.07566231488f*fZ;
pOut[34] = fPb*fC1;
pOut[26] = fPb*fS1;
fPc = ( 5.55021390802f*fZ2)+ -0.504564900729f;
pOut[46] = fPc*fC1;
pOut[38] = fPc*fS1;
fC0 = (fX*fC1)-(fY*fS1);
fS0 = (fX*fS1)+(fY*fC1);
fPa =  -0.65638205684f;
pOut[35] = fPa*fC0;
pOut[25] = fPa*fS0;
fPb =  -2.36661916223f*fZ;
pOut[47] = fPb*fC0;
pOut[37] = fPb*fS0;
fC1 = (fX*fC0)-(fY*fS0);
fS1 = (fX*fS0)+(fY*fC0);
fPc =  0.683184105192f;
pOut[48] = fPc*fC1;
pOut[36] = fPc*fS1;
#endif // muls = 100
#if MAX_SH_ORDER == 8
float fZ2 = fZ*fZ;
pOut[0] = 0.282094791774;
pOut[2] =  0.488602511903f*fZ;
pOut[6] = ( 0.946174695758f*fZ2)+ -0.315391565253f;
pOut[12] = fZ*((fZ2* 1.86588166295f)+ -1.11952899777f);
pOut[20] = ((fZ* 1.9843134833f)*pOut[ 12])+( -1.00623058987f*pOut[ 6]);
pOut[30] = ((fZ* 1.98997487421f)*pOut[ 20])+( -1.00285307284f*pOut[ 12]);
pOut[42] = ((fZ* 1.99304345718f)*pOut[ 30])+( -1.00154202096f*pOut[ 20]);
pOut[56] = ((fZ* 1.99489143482f)*pOut[ 42])+( -1.00092721392f*pOut[ 30]);
fC0 = fX;
fS0 = fY;
fPa =  -0.488602511903f;
pOut[3] = fPa*fC0;
pOut[1] = fPa*fS0;
fPb =  -1.09254843059f*fZ;
pOut[7] = fPb*fC0;
pOut[5] = fPb*fS0;
fPc = ( -2.28522899732f*fZ2)+ 0.457045799464f;
pOut[13] = fPc*fC0;
pOut[11] = fPc*fS0;
fPa = fZ*((fZ2* -4.6833258049f)+ 2.00713963067f);
pOut[21] = fPa*fC0;
pOut[19] = fPa*fS0;
fPb = ((fZ* 2.03100960116f)*fPa)+( -0.991031208965f*fPc);
pOut[31] = fPb*fC0;
pOut[29] = fPb*fS0;
fPc = ((fZ* 2.02131498924f)*fPb)+( -0.995226703056f*fPa);
pOut[43] = fPc*fC0;
pOut[41] = fPc*fS0;
fPa = ((fZ* 2.01556443707f)*fPc)+( -0.997155044022f*fPb);
pOut[57] = fPa*fC0;
pOut[55] = fPa*fS0;
fC1 = (fX*fC0)-(fY*fS0);
fS1 = (fX*fS0)+(fY*fC0);
fPa =  0.546274215296f;
pOut[8] = fPa*fC1;
pOut[4] = fPa*fS1;
fPb =  1.44530572132f*fZ;
pOut[14] = fPb*fC1;
pOut[10] = fPb*fS1;
fPc = ( 3.31161143515f*fZ2)+ -0.473087347879f;
pOut[22] = fPc*fC1;
pOut[18] = fPc*fS1;
fPa = fZ*((fZ2* 7.19030517746f)+ -2.39676839249f);
pOut[32] = fPa*fC1;
pOut[28] = fPa*fS1;
fPb = ((fZ* 2.11394181566f)*fPa)+( -0.973610120462f*fPc);
pOut[44] = fPb*fC1;
pOut[40] = fPb*fS1;
fPc = ((fZ* 2.08166599947f)*fPb)+( -0.984731927835f*fPa);
pOut[58] = fPc*fC1;
pOut[54] = fPc*fS1;
fC0 = (fX*fC1)-(fY*fS1);
fS0 = (fX*fS1)+(fY*fC1);
fPa =  -0.590043589927f;
pOut[15] = fPa*fC0;
pOut[9] = fPa*fS0;
fPb =  -1.77013076978f*fZ;
pOut[23] = fPb*fC0;
pOut[17] = fPb*fS0;
fPc = ( -4.40314469492f*fZ2)+ 0.489238299435f;
pOut[33] = fPc*fC0;
pOut[27] = fPc*fS0;
fPa = fZ*((fZ2* -10.1332578547f)+ 2.76361577854f);
pOut[45] = fPa*fC0;
pOut[39] = fPa*fS0;
fPb = ((fZ* 2.20794021658f)*fPa)+( -0.9594032236f*fPc);
pOut[59] = fPb*fC0;
pOut[53] = fPb*fS0;
fC1 = (fX*fC0)-(fY*fS0);
fS1 = (fX*fS0)+(fY*fC0);
fPa =  0.625835735449f;
pOut[24] = fPa*fC1;
pOut[16] = fPa*fS1;
fPb =  2.07566231488f*fZ;
pOut[34] = fPb*fC1;
pOut[26] = fPb*fS1;
fPc = ( 5.55021390802f*fZ2)+ -0.504564900729f;
pOut[46] = fPc*fC1;
pOut[38] = fPc*fS1;
fPa = fZ*((fZ2* 13.4918050467f)+ -3.11349347232f);
pOut[60] = fPa*fC1;
pOut[52] = fPa*fS1;
fC0 = (fX*fC1)-(fY*fS1);
fS0 = (fX*fS1)+(fY*fC1);
fPa =  -0.65638205684f;
pOut[35] = fPa*fC0;
pOut[25] = fPa*fS0;
fPb =  -2.36661916223f*fZ;
pOut[47] = fPb*fC0;
pOut[37] = fPb*fS0;
fPc = ( -6.74590252336f*fZ2)+ 0.51891557872f;
pOut[61] = fPc*fC0;
pOut[51] = fPc*fS0;
fC1 = (fX*fC0)-(fY*fS0);
fS1 = (fX*fS0)+(fY*fC0);
fPa =  0.683184105192f;
pOut[48] = fPa*fC1;
pOut[36] = fPa*fS1;
fPb =  2.6459606618f*fZ;
pOut[62] = fPb*fC1;
pOut[50] = fPb*fS1;
fC0 = (fX*fC1)-(fY*fS1);
fS0 = (fX*fS1)+(fY*fC1);
fPc =  -0.707162732525f;
pOut[63] = fPc*fC0;
pOut[49] = fPc*fS0;
#endif // muls = 134
}